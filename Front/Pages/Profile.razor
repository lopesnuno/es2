@page "/user/{id}"
@using Microsoft.AspNetCore.Components
@inject HttpClient httpClient
@using Front.Services
@using Front.Models.bModels
@inject IUserService UserService
@inject NavigationManager NavigationManager
@using System.Text.Json
@using System.Text


<PageTitle>User Profile</PageTitle>

<style>
    .button {
        margin-top: 20px;
    }
    label {
        margin-top: 10px;
        color: royalblue;
    }
    InputText{
        border-color: royalblue;
    }
</style>

<h3>User - @_user.Name</h3>
    @if (_user != null)
    {
        <p>Date: @_user.Username</p>
        <p>Location: @_user.Password</p>
        <p>Description: @_user.Name</p>
        <p>Category: @_user.Email</p>
        <p>PhoneNumber: @_user.PhoneNumber</p>
    }

@code {
    private string actionMessage = "";
    private List<UserService> users;
    private int editUtilizadorId;
    private string createMessage;
    bool showEditForm = false;
    private bool showUserList = false;
    
 

    
    [Parameter]
    public string? Id { get; set; }
    
       User? _user = null!;
    
    protected override async Task OnInitializedAsync()
    {
        if (Id is not null)
        {
            var result = await UserService.GetUserById(Id);
            if (result is not null)
            {
                _user = result;
            }
            else
            {
                NavigationManager.NavigateTo("/users");
            }
        }
    }
    
    
//     private UserService userToEdit;
//     bool editFormVisible = false;

//     private void ShowEditUserForm(UserService user)
//     {
//         userToEdit = user;
//         editFormVisible = true;
//         showUserList = false;
//     }

//    private async Task UpdateUser()
//    {
//        var content = new StringContent(JsonSerializer.Serialize(userToEdit), Encoding.UTF8, "application/json");
//         var response = await httpClient.PutAsync($"http://localhost:5052/api/Users/{userToEdit.UserID}", content);
// 
//         if (response.IsSuccessStatusCode)
//         {
//             actionMessage = "User updated successfully";
//             userToEdit = null;
//             editFormVisible = false;
//             await ListAllUsers();
//         }
//         else
//         {
//             actionMessage = "Failed to update user";
//         }
//     }
//     private void CancelEdit()
//     {
//         showEditForm = false;
//         user = new UserService();
//     }
 }