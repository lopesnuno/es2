@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components
@using System.Text.Json
@using Frontend.Data

@page "/events"
@inject HttpClient HttpClient

<PageTitle>Eventos</PageTitle>

<h1>Eventos Disponíveis</h1>

@if (!showEventList)
{
    <h4>No events yet!</h4>
}

<style>
    .event-link {
        cursor: pointer;
        color: blue;
        text-decoration: underline;
    }
</style>

@if (showEventList)
{
    <table class="table">
        <thead>
        <tr>
            <th>Nome</th>
            <th>Data</th>
            <th>Local</th>
            <td>Descricao</td>
            <td>Categoria</td>
        </tr>
        </thead>
        <tbody>
        @foreach (EventModel e in events)
        {
            <tr>
                <td><NavLink href="eventinfo" class="event-link" Match="NavLinkMatch.All" Parameters="new Dictionary<string, object> { { "id", e.Id } }">@e.Name</NavLink></td>
                <td>@e.Date</td>
                <td>@e.Location</td>
                <td>@e.Description</td>
                <td>@e.Category</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private string actionMessage = "";
    private List<EventModel> events;
    private EventModel e = new EventModel();
    private string createMessage;
    private bool showEventList = false;

    private async Task ListAllEvents()
    {
        var response = await HttpClient.GetAsync("api/Event");

        if (response.IsSuccessStatusCode)
        {
            var jsonResponse = await response.Content.ReadAsStringAsync();
            var document = JsonDocument.Parse(jsonResponse);

            events = document.RootElement.GetProperty("$values").EnumerateArray()
                .Select(element => new EventModel
                {
                    Name = element.GetProperty("name").GetString(),
                    Date = element.GetProperty("date").GetDateTime(),
                    Location = element.GetProperty("location").GetString(),
                    Description = element.GetProperty("description").GetString(),
                    Category = element.GetProperty("dategory").GetString()
                })
                .ToList();

            showEventList = true;
        }
        else
        {
            events = new List<EventModel>();
            showEventList = false;
        }
    }

}